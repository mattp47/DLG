@import '~@angular/material/theming';
@import "./variables.scss";
@include mat-core();

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$theme: mat-light-theme((
  color: (
    primary: $primary,
    accent: $accent,
    warn: $warn,
  ),
  // typography: $app-typography
));

@include angular-material-theme($theme);

@mixin accordion-color($theme) {
  // Extract the color configuration in case a theme has been passed.
  // This allows consumers to either pass a theme object or a color configuration.
  $config: mat-get-color-config($theme);
  // Extract the palettes you need from the theme definition.
  $primary: map-get($config, primary);
  $accent: map-get($config, accent);

  // Define any styles affected by the theme.
  /* h1 {
    color: mat-color($primary);
  } */

}

@mixin accordion-typography($theme) {
  // Extract the typography configuration in case a theme has been passed.
  // $config: mat-get-typography-config($theme);

  /* h1 {
    font: {
      family: mat-font-family($config, title);
      size: mat-font-size($config, title);
      weight: mat-font-weight($config, title);
    }
    color: red;
  } */

  // Custom title that uses all of the typography styles from the `title` level.
 /* .oswald-light {
    @include mat-typography-level-to-styles($oswald-light, title);
  }

  .oswald-regular {
    @include mat-typography-level-to-styles($oswald-regular, title);
  } */

  /* .oswald-bold {
    @include mat-typography-level-to-styles($oswald-bold, title);
  } */

  /* h1 {
    font: {
      family: mat-font-family($oswald-bold, title);
      size: mat-font-size($oswald-bold, title);
      weight: mat-font-weight($oswald-bold, title);
    }
  } */
}

@mixin accordion-theme($theme) {
  // Extracts the color and typography configurations from the theme.
  $color: mat-get-color-config($theme);
  $typography: mat-get-typography-config($theme);

  @font-face {
    font-family: OswaldLight;
    src: url('../assets/fonts/oswald-light.ttf') format("truetype");
  }

  @font-face {
    font-family: OswaldRegular;
    src: url('../assets/fonts/oswald-regular.ttf') format("truetype");
  }

  @font-face {
    font-family: OswaldBold;
    src: url('../assets/fonts/oswald-bold.ttf') format("truetype");
  }

  $oswald-light: mat-typography-config(
    $font-family: '"OswaldLight", sans-serif',
    $headline: mat-typography-level(32px, 48px, 700),
    $body-1: mat-typography-level(16px, 24px, 500)
  );

  $oswald-regular: mat-typography-config(
    $font-family: '"OswaldRegular", sans-serif',
    $headline: mat-typography-level(32px, 48px, 700),
    $body-1: mat-typography-level(16px, 24px, 500)
  );

  $oswald-bold: mat-typography-config(
    $font-family: '"OswaldBold", sans-serif',
    $headline: mat-typography-level(32px, 48px, 700),
    $body-1: mat-typography-level(16px, 24px, 500)
  );

  /* .oswald-light {
    font-size: mat-font-size($oswald-light, headline);
    font-family: mat-font-family($oswald-light);
  }

  .oswald-regular {
    font-size: mat-font-size($oswald-regular, headline);
    font-family: mat-font-family($oswald-regular);
  }

  .oswald-bold {
    font-size: mat-font-size($oswald-bold, headline);
    font-family: mat-font-family($oswald-bold);
  } */

  mat-card.container {
    max-width: 1170px;
    margin: 0 auto;
    border: none;
    box-shadow: none !important;
    h1 {
      padding: 40px 0 30px 0;
      margin-bottom: 40px;
      font-size: 4em;
      border-bottom: 35px solid mat-color($primary);
      line-height: normal;
      font: {
        family: mat-font-family($oswald-bold, headline);
        /* size: mat-font-size($oswald-bold, headline);
         weight: mat-font-weight($oswald-bold, headline); */
      }
      color: mat-color($primary);
    }
    .mat-accordion .mat-expansion-panel {
      border-radius: 0;
      border-bottom: 3px solid mat-color($primary);
      box-shadow: none !important;

      ::ng-deep mat-expansion-panel-header {
        color: mat-color($primary);
        height: 64px;
        &.mat-expanded {
          background: mat-color($grey);
        }
      }

      ::ng-deep .mat-expansion-panel-body{
        background: white;
        padding: 16px 24px 16px 16px !important;
        font-size: 18px;
        font-family: mat-font-family($oswald-regular);
        line-height: 1.5;
        .mat-expansion-panel-header-description {
          color: mat-color($primary);
        }
      }

     /* ::ng-deep .specific-class > .mat-expansion-indicator {
        padding: 20px;
        background: url("../assets/images/plus-icon.svg") no-repeat center center #FED230;
        background-size: 24px 24px;
        &:after {
          color: red;
          border: none;
          transform: rotate(225deg) !important;
        }
      } */
      span.qtxt {
        font-size: 18px;
        font-family: mat-font-family($oswald-regular);
        padding: 15px 25px 15px 50px;
      }
      span.qno{
        font-size: 36px;
        font-family: mat-font-family($oswald-bold);
        padding-top: 5px;
      }

      span.plus {
        background: #FED230;
        right:12px;
        top: 12px;
        position: absolute;
        display: block;
        i {
          background: url("../assets/images/plus-icon.svg") no-repeat center center;
          background-size: 24px 24px;
          padding: 20px;
          display: inline-block;
          vertical-align: middle;
          &.closed {
            transform: rotate(0deg);
          }
          &.open {
            transform: rotate(45deg);
            transition: all 0.3s;
          }
        }
      }

    }
  }

  .mat-expansion-panel-spacing {
    margin: 0;
  }

  // Do not generate styles if configurations for individual theming
  // systems have been explicitly set to `null`.
  @if $color != null {
    @include accordion-color($color);
  }
  @if $typography != null {
    @include accordion-typography($typography);
  }
}
